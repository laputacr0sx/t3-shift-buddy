generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:92086125felix@localhost:5432/postgres"
}

enum Location {
  HUH
  SHT
  SHS
  LOW
  HTD
  TAD
  FTRH
}

enum Area {
  KLN
  SHS
  ENT
  SPC
}

enum Grade {
  G40
  G50
  S10
  S20
  S30
}

enum SystemRole {
  ADMIN
  USER
  POWER_USER
}

model Duty {
  dutyNumber  String   @id @unique
  bNL         Location
  bNT         String
  bFT         String
  bFL         Location
  duration    String
  remarks     String
  timetableId String
  sequenceId  String

  Timetable Timetable[]
  Sequence  Sequence[]
}

model User {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  id         String     @id @default(uuid())
  loginId    String
  password   String
  systemRole SystemRole @default(USER)
  staffId    String
  Staff      Staff?
}

model Staff {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  id         String   @id @unique
  name       String
  email      String
  dateOfJoin DateTime
  gradeId    Grade    @default(G40)
  areaId     Area     @default(KLN)

  Sequence Sequence[]

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Timetable {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  toc             String   @id @unique
  dateOfEffective DateTime
  isSpecial       Boolean
  // prefix J15/C75/V71/D14
  prefix          String

  Duty   Duty[]
  Roster Roster[]
}

model Roster {
  id          String   @id
  publishedAt DateTime
  publisherId String

  Sequence   Sequence[]
  Timetables Timetable[]
}

model Sequence {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  id    String @id @unique
  dutis Duty[]

  rosterId String
  Roster   Roster @relation(fields: [rosterId], references: [id])

  staffId String
  Staff   Staff  @relation(fields: [staffId], references: [id])
}
